package modules

import (
	"github.com/axzilla/templui/components"
	"github.com/axzilla/templui/icons"
	"github.com/axzilla/templui/internal/ctxkeys"
	"github.com/axzilla/templui/internal/shared"
	wrappedicons "github.com/axzilla/templui/internal/ui/icons"
)

templ Navbar() {
	<nav class="border-b py-1">
		<div class="container mx-auto px-4 flex justify-between items-center">
			<div class="flex items-center">
				@NavbarMobileMenu()
				<a href="/">
					@wrappedicons.TemplUI("w-auto h-8")
				</a>
			</div>
			<div class="hidden md:flex gap-4 items-center">
				<a href="/docs/getting-started" class="text-sm hover:underline">Docs</a>
				<a href="/docs/components" class="text-sm hover:underline">Components</a>
			</div>
			<div class="flex items-center">
				@components.Button(components.ButtonProps{
					Size:    components.ButtonSizeIcon,
					Variant: components.ButtonVariantGhost,
					Href:    "https://github.com/axzilla/templui",
					Target:  "_blank",
				}) {
					@wrappedicons.GitHub(24)
				}
				@components.Button(components.ButtonProps{
					Size:    components.ButtonSizeIcon,
					Variant: components.ButtonVariantGhost,
					Href:    "https://x.com/_axzilla/",
					Target:  "_blank",
				}) {
					@wrappedicons.X(16)
				}
				@ThemeSwitcher(ThemeSwitcherProps{})
			</div>
		</div>
	</nav>
}

templ NavbarMobileMenu() {
	@components.Drawer(components.DrawerProps{}) {
		@components.DrawerTrigger(components.DrawerTriggerProps{}) {
			<button
				class="mr-2 lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-hidden focus:ring-2 focus:ring-inset focus:ring-indigo-500"
			>
				@icons.SquareLibrary(icons.IconProps{})
			</button>
		}
		@components.DrawerContent(components.DrawerContentProps{Side: components.DrawerPositionLeft}) {
			<div class="space-y-4">
				for _, section := range shared.Sections {
					<div class="pb-4">
						<h3 class="px-4 text-sm font-bold text-gray-600 dark:text-gray-400">{ section.Title }</h3>
						<ul class="mt-2 space-y-1">
							for _, link := range section.Links {
								<li>
									if link.Href == ctx.Value(ctxkeys.URLPathValue) {
										<a
											href={ templ.SafeURL(link.Href) }
											class={ "text-sm flex items-center px-4 py-2 rounded-md text-gray-700 dark:text-gray-200 bg-gray-100 dark:bg-gray-700" }
										>
											<span>{ link.Text }</span>
										</a>
									} else {
										<a
											href={ templ.SafeURL(link.Href) }
											class={ "text-sm flex items-center px-4 py-2 rounded-md text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700" }
										>
											<span>{ link.Text }</span>
										</a>
									}
								</li>
							}
						</ul>
					</div>
				}
			</div>
		}
	}
}
